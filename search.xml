<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[ipsec VPN 访问控制]]></title>
    <url>%2F2018%2F06%2F10%2Fipsec-VPN-%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%2F</url>
    <content type="text"><![CDATA[Cisco数据包处理流程了解厂商数据包处理流程才能更好的利用ACL等策略以最高效的手段进行访问控制==cisco设备在在此有两个阶段== IOS12.4之前 IOS12.4之后 案例一 before Release 12.3(8)T在之前的版本12.4之前我们可以清晰的看到设备对于inbound流量，会在加密前匹配一次inbound方向的ACL，解密之后数据会再一次匹配inbound方向的ACL。已上图为例：123456789101112131415161718192021#已A路由器为例（仅允许10.1.1.0/24访问10.1.2.0/24）：crypto map vpnmap 10 ipsec-isakmp set peer 192.168.2.1 set transform-set trans1 match address 101 interface Ethernet0/0 ip address 10.1.1.1 255.255.255.0 interface Serial1/0 ip address 192.168.1.1 255.255.255.0 ip access-group 150 in ip access-group 160 out crypto map vpnmap access-list 101 permit ip 10.1.1.0 0.0.0.255 10.1.2.0 0.0.0.255 access-list 150 permit udp host 192.168.2.1 eq 500 host 192.168.1.1 eq 500 access-list 150 permit esp host 192.168.2.1 host 192.168.1.1 access-list 150 permit ip 10.1.2.0 0.0.0.255 10.1.1.0 0.0.0.255 access-list 160 permit udp host 192.168.1.1 eq 500 host 192.168.2.1 eq 500 access-list 160 permit ip 10.1.1.0 0.0.0.255 10.1.2.0 0.0.0.255 新的IPsec VPN 没有crypto access ACL访问控制:新版本的IPsec VPN inbound流量只会在未解密之前匹配inbound ACL，解密后的流量不在匹配inbound ACL，此时解密后的流量会匹配crypto access ACL。已上图为例在新版本下配置无crypto access ACL的IPsec VPN访问控制：1234567891011121314151617181920#以A路由器为例（允许10.1.1.0/24访问10.1.2.0/24）crypto map vpnmap 10 ipsec-isakmp set peer 192.168.2.1 set transform-set trans1 match address 101 interface Ethernet0/0 ip address 10.1.1.1 255.255.255.0 interface Serial1/0 ip address 192.168.1.1 255.255.255.0 ip access-group 150 in ip access-group 160 out crypto map vpnmap access-list 101 permit ip 10.1.1.0 0.0.0.255 10.1.2.0 0.0.0.255 access-list 150 permit udp host 192.168.2.1 eq 500 host 192.168.1.1 eq 500 access-list 150 permit esp host 192.168.2.1 host 192.168.1.1 access-list 160 permit udp host 192.168.1.1 eq 500 host 192.168.2.1 eq 500 access-list 160 permit esp host 192.168.1.1 host 192.168.2.1 新的IPsec VPN 有crypto access ACL访问控制新版本的IPsec VPN inbound流量只会在未解密之前匹配inbound ACL，解密后的流量不在匹配inbound ACL，此时解密后的流量会匹配crypto access ACL。已上图为例在新版本下配置有crypto access ACL的IPsec VPN访问控制：1234567891011121314151617181920212223242526272829#以A路由器为例（仅允许10.1.1.0/24和10.1.2.0/24的telnet流量互通）：crypto map vpnmap 10 ipsec-isakmp set peer 192.168.2.1 set transform-set trans1 set ip access-group 151 in set ip access-group 161 out match address 101 interface Ethernet0/0 ip address 10.1.1.1 255.255.255.0 interface Serial1/0 ip address 192.168.1.1 255.255.255.0 ip access-group 150 in ip access-group 160 out crypto map vpnmap access-list 101 permit ip 10.1.1.0 0.0.0.255 10.1.2.0 0.0.0.255 access-list 150 permit udp host 192.168.2.1 eq 500 host 192.168.1.1 eq 500 access-list 150 permit esp host 192.168.2.1 host 192.168.1.1 access-list 151 permit tcp 10.1.2.0 0.0.0.255 eq telnet 10.1.1.0 0.0.0.255 access-list 151 permit tcp 10.1.2.0 0.0.0.255 10.1.1.0 0.0.0.255 eq telnet access-list 160 permit udp host 192.168.1.1 eq 500 host 192.168.2.1 eq 500 access-list 160 permit esp host 192.168.1.1 host 192.168.2.1 access-list 161 permit ip 10.1.1.0 0.0.0.255 10.1.2.0 0.0.0.255 eq telnet access-list 161 permit ip 10.1.1.0 0.0.0.255 eq telnet 10.1.2.0 0.0.0.255]]></content>
      <categories>
        <category>network</category>
        <category>ipsec</category>
      </categories>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Snoonping]]></title>
    <url>%2F2018%2F06%2F10%2FSnoonping%2F</url>
    <content type="text"><![CDATA[DHCP SnoopingDHCP被用于动态地址分发，极大的降低了终端接入网络的简易性，但是协议本身没有任何的安全保护机制，非常容易被针对攻击。同一广播域中一旦出现虚假DHCP Server，终端获取的地址将极有可能是虚假DHCP Server推送的IP地址，导致广播域中很大一部分终端无法上网。 DHCP Snooping功能概述 对非信任接口收到的DHCP等报文过滤 限制DHCP速率 维护DHCP snooping binding database DAI需要DHCP snooping binding database的信息DHCP Snooping报文过滤当DHCP Snooping功能在相应vlan开启后，在不信任的接口在收到以下报文会产生丢弃行为 当收到（例如：DHCPOFFER、DHCPACK、DHCPNAK、DHCPLEASEQUERY报文） 当收到源MAC地址和DHCP客户端硬件地址不匹配 当收到DHCPRELEASE、DHCPDECLINE报文但是和DHCP Snooping数据库中的绑定条目不匹配 当收到DHCP packets含有options-82选项DHCP Snooping 82选项插入开启DHCP Snooping的就交换机在收到DHCP报文时会对报文插入82选项 option-82信息包含交换机MAC、端口身份、vlan-mod-port（如下图） 如果开启802.1x，option-82内包含Radius认证信息 包含中继地址DHCP Snooping database所有绑定信息都会存储在数据库中（如下图） 默认DHCP Snooping开启功能 Option Default Value/State DHCP snooping Disabled DHCP snooping host tracking feature Disabled DHCP snooping information option Enabled DHCP option-82 on untrusted port feature Disabled DHCP snooping limit rate None DHCP snooping trust Untrusted DHCP snooping vlan Disabled DHCP snooping spurious server detection Disabled DHCP snooping detect spurious interval 30 minutes DHCP Snooping配置拓扑 配置12345ClientClient#configure terminal Enter configuration commands, one per line. End with CNTL/Z.Client(config)#inter e0/0Client(config)#ip add dhcp #接口地址启用dhcp 123456789101112131415161718192021222324252627282930313233343536373839404142434445SW1:SW1#configure terminal Enter configuration commands, one per line. End with CNTL/Z.SW1(config)#vlan 10SW1(config-vlan)#exitSW1(config)#inter e0/0SW1(config)#sw mo accSW1(config)#sw acc vlan 10SW1(config)#inter e0/1SW1(config)#sw mo accSW1(config)#sw acc vlan 10SW1(config)#ip dhcp snooping #全局开启dhcp snooping功能SW1(config)#do show ip dhcp snooping | include Switch #查看dhcp snooping是否开启Switch DHCP snooping is enabledSW1(config)ip dhcp snooping information optionSW1(config-vlan)#do show ip dhcp snooping | include 82 #查看option82是否打开Insertion of option 82 is enabledOption 82 on untrusted port is not allowedSW1(config)#ip dhcp snooping verify mac-address #开启mac-ip绑定验证功能SW1(config-vlan)#do show ip dhcp snooping | include hwaddr #查看上述功能是否打开Verification of hwaddr field is enabledSW1(config)#ip dhcp snooping database disk0:/dhcp.db #配置dhcp snooping database存放位置SW1(config)#ip dhcp snooping vlan 10 #在特定vlan启动dhcp snoopingSW1(config)#do show ip dhcp snoopingSwitch DHCP snooping is enabledSwitch DHCP gleaning is disabledDHCP snooping is configured on following VLANs:10DHCP snooping is operational on following VLANs:10DHCP snooping is configured on the following L3 Interfaces:Insertion of option 82 is enabled circuit-id default format: vlan-mod-port remote-id: aabb.cc00.5000 (MAC)Option 82 on untrusted port is not allowedVerification of hwaddr field is enabledVerification of giaddr field is enabledDHCP snooping trust/rate is configured on the following Interfaces:Interface Trusted Allow option Rate limit (pps)----------------------- ------- ------------ ---------------- SW1(config-if)#ip dhcp snooping trust #将连接上游交换机接口配置为可信接口SW1(config-if)#ip dhcp snooping limit rate 60 #根据需求配置DHCP限速 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748SW2:SW2:SW2#configure terminal Enter configuration commands, one per line. End with CNTL/Z.SW2(config)#vlan 10SW2(config-vlan)#exitSW2(config)#inter e0/0SW2(config)#sw mo accSW2(config)#sw acc vlan 10SW2(config)#inter e0/1SW2(config)#sw mo accSW2(config)#sw acc vlan 10SW2(config)#ip dhcp snooping #全局开启dhcp snooping功能SW2(config)#do show ip dhcp snooping | include Switch #查看dhcp snooping是否开启Switch DHCP snooping is enabledSW2(config)ip dhcp snooping information optionSW2(config-vlan)#do show ip dhcp snooping | include 82 #查看option82是否打开Insertion of option 82 is enabledOption 82 on untrusted port is not allowedSW2(config)#ip dhcp snooping verify mac-address #开启mac-ip绑定验证功能SW2(config-vlan)#do show ip dhcp snooping | include hwaddr #查看上述功能是否打开Verification of hwaddr field is enabledSW2(config)#ip dhcp snooping database disk0:/dhcp.db #配置dhcp snooping database存放位置SW2(config)#ip dhcp snooping vlan 10 #在特定vlan启动dhcp snoopingSW2(config)#do show ip dhcp snoopingSwitch DHCP snooping is enabledSwitch DHCP gleaning is disabledDHCP snooping is configured on following VLANs:10DHCP snooping is operational on following VLANs:10DHCP snooping is configured on the following L3 Interfaces:Insertion of option 82 is enabled circuit-id default format: vlan-mod-port remote-id: aabb.cc00.5000 (MAC)Option 82 on untrusted port is not allowedVerification of hwaddr field is enabledVerification of giaddr field is enabledDHCP snooping trust/rate is configured on the following Interfaces:Interface Trusted Allow option Rate limit (pps)----------------------- ------- ------------ ---------------- SW2(config-if)#ip dhcp snooping trust #将连接上游交换机接口配置为可信接口SW2(config-if)#ip dhcp snooping limit rate 60 #根据需求配置DHCP限速SW2(config-if)#inter e0/0SW2(config-if)#ip dhcp snooping information option allow-untrusted #将连接下游交换机接口配置允许含option82数据包通过（默认非信任端口自动丢弃） 123456789101112Server:DHCP#configure terminal Enter configuration commands, one per line. End with CNTL/Z.DHCP(config)#inter e0/0DHCP(config-if)#ip address 192.168.2.1 255.255.255.0DHCP(config-if)#no shutDHCP(config)#ip dhcp pool test #配置DHCP ServerDHCP(dhcp-config)#network 192.168.2.0 255.255.255.0DHCP(dhcp-config)#default-router 192.168.2.1 DHCP(dhcp-config)#dns-server 114.114.114.114DHCP(dhcp-config)#exitDHCP(config)#ip dhcp relay information trust-all #所有IOS配置的DHCP Server对于DHCP插入option82选项的报文检查中继选项，如果中继选项为0.0.0.0丢弃报文。（另外一种接解决方案可以关闭插入option82选项在交换机上，大神说关闭这个选项影响性能详见：https://supportforums.cisco.com/t5/lan-switching-and-routing/dhcp-snooping/td-p/1622877） DHCP Snooping 终结除了上述一些功能外，dhcp snooping还有以下的特性 DHCP Snooping Host Tracking #Release 12.2(33)SXJ2后支持利用cache记录vlan-mac-port绑定用于DHCP转发相应报文 DHCP Snooping database远程数据库 #从远程tftp服务器读取配置信息详细文档见官网（https://www.cisco.com/c/en/us/td/docs/switches/lan/catalyst6500/ios/12-2SX/configuration/guide/book/snoodhcp.html#wp1140196）]]></content>
      <categories>
        <category>network</category>
        <category>dhcp</category>
      </categories>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Cisco路由交换-NAT详解三（区域无关NAT）]]></title>
    <url>%2F2018%2F06%2F10%2FCisco%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2-NAT%E8%AF%A6%E8%A7%A3%E4%B8%89%EF%BC%88%E5%8C%BA%E5%9F%9F%E6%97%A0%E5%85%B3NAT%EF%BC%89%2F</url>
    <content type="text"><![CDATA[概述上篇文章介绍了在不同区域下各个参数搭配使用的不同效果（实现tcp的负载均衡、地址伪装），今天给大家带了一个不太被常用但是确实很好用的NAT配置方法。大家应该很清楚常规的NAT配置下经常会碰到NAT回流的问题（内部的服务器映射给公网使用，常规ip nat inside source static映射后，外网用户可以正常访问该服务器，但是内网用户则无法使用该服务器映射公网地址访问服务器）。归根结底问题出在内网用户访问其公网地址时因为数据包处理逻辑问题无法匹配到该静态NAT，而是做完动态NAT后直接到达该公网地址了。现在区域无关NAT改变了设备在处理NAT时的数据包处理流程，无论哪个方向到来的数据包都会先匹配NAT策略，这样轻松的解决了NAT回流问题。 实验要求将Client-2作为内网Server映射到公网地址200.1.1.4提供telnet服务Client-1和外网Server能同时使用200.1.1.4这个地址telnet管理Client-2 拓扑 基础配置123456789101112131415161718192021222324252627282930313233343536373839404142434445Client-1:Client-1(config)#inter f0/0Client-1(config-if)#ip add 192.168.2.2 255.255.255.0Client-1(config-if)#no shutClient-1(config)#ip route 0.0.0.0 0.0.0.0 192.168.2.1Client-1(config)#username test privilege 15 password testClient-1(config)#line vty 0 15Client-1(config-line)#login localClient-2:Client-2(config)#inter f0/0Client-2(config-if)#ip add 192.168.2.3 255.255.255.0Client-2(config-if)#no shutClient-2(config)#ip route 0.0.0.0 0.0.0.0 192.168.2.1Client-2(config)#username test privilege 15 password testClient-2(config)#line vty 0 15Client-2(config-line)#login localGW-WAN:GW-WAN(config)#inter f0/0GW-WAN(config-if)#ip add 192.168.2.1 255.255.255.0GW-WAN(config-if)#ip nat insideGW-WAN(config-if)#no shutGW-WAN(config-if)#inter f0/1GW-WAN(config-if)#ip add 200.1.1.2 255.255.255.0GW-WAN(config-if)#ip nat outsideGW-WAN(config-if)#no shutGW-WAN(config)#ip route 0.0.0.0 0.0.0.0 200.1.1.1Internet:Internet(config)#inter f0/0Internet(config-if)#ip add 200.1.1.1 255.255.255.0Internet(config-if)#no shutInternet(config-if)#inter f0/1Internet(config-if)#ip add 100.1.1.1 255.255.255.0Internet(config-if)#no shutServer:Server(config)#inter f0/0Server(config-if)#ip add 100.1.1.100 255.255.255.0Server(config-if)#no shutServer(config)#ip route 0.0.0.0 0.0.0.0 100.1.1.1Server(config)#username test priv 15 password testServer(config)#line vty 0 15Server(config-line)#login local 区域无关NAT配置12345678GW-WAN(config)#ip access-list ex testGW-WAN(config-ext-nacl)#permit ip 192.168.2.0 0.0.0.255 any #匹配内网地址到所有地方的流量GW-WAN(config)#ip nat source list test interface f0/1 overload #配置动态PAT保障内网用户正常上网GW-WAN(config)#ip nat source static 192.168.2.3 200.1.1.4 #把Client-2映射成公网地址，提供服务GW-WAN(config)#inter f0/0GW-WAN(config-if)#ip nat enable #开启区域无关NAT功能GW-WAN(config-if)#inter f0/1GW-WAN(config-if)#ip nat enable #开启区域网关NAT功能 测试Client-1使用公网地址telnet管理Client-212345678Client-1#telnet 200.1.1.4Trying 200.1.1.4 ... OpenUser Access VerificationUsername: testPassword: Client-2#Client-2#exit[Connection to 200.1.1.4 closed by foreign host] Server使用公网地址telnet管理Client-2 12345678Server#telnet 200.1.1.4Trying 200.1.1.4 ... OpenUser Access VerificationUsername: testPassword: Client-2#Client-2#exit[Connection to 200.1.1.4 closed by foreign host] GW-WAN上转换表项12345GW-WAN#show ip nat nvi translations Pro Source global Source local Destin local Destin globaltcp 100.1.1.100:37514 100.1.1.100:37514 200.1.1.4:23 192.168.2.3:23tcp 200.1.1.2:31321 192.168.2.2:31321 200.1.1.4:23 192.168.2.3:23--- 200.1.1.4 192.168.2.3 --- --- Cisco IOS NAT告一段落，接下来（openflow or ASA NAT ） 在现在的设备中通常使用双向NAT解决，Cisco ASA中可以使用DNS重写功能实现。]]></content>
      <categories>
        <category>network</category>
        <category>nat</category>
      </categories>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[QoS第一讲（发展、等级模型、工具）]]></title>
    <url>%2F2018%2F06%2F10%2FQoS%E7%AC%AC%E4%B8%80%E8%AE%B2%EF%BC%88%E5%8F%91%E5%B1%95%E3%80%81%E7%AD%89%E7%BA%A7%E6%A8%A1%E5%9E%8B%E3%80%81%E5%B7%A5%E5%85%B7%EF%BC%89%2F</url>
    <content type="text"><![CDATA[QoS发展史初期阶段创建Internet的先驱其实在最开始已经预见到了对流量提供服务质量的需求，在IP分组包头中添加了Tos字段。当然Internet在前期的时候这种需求还不明显所以Tos字段无关紧要。随着Internet逐渐普及QoS逐渐重要，Internet基于TCP/IP的尽力而为的无链路端到端服务，很容易导致网络的拥塞。鉴于WAN链路昂贵于是乎起初的QoS主要集中在终端系统，例如：TCP的nagle算法、TCP拥塞机制 中期阶段仅仅依靠终端的QoS机制远远不能解决广域网中的拥塞问题，于是IETF与1994年发布了IntServ（综合服务模型）服务模型，使用RSVP（资源预留协议）对Internet中的每流提供资源预留，以此解决拥塞问题。但是IntServ有个很致命的问题，Internet中的流成千上万如果基于流进行控制，会有严重的灵活性和扩展性的问题；于是DiffServ（区分服务）服务模型出现，使得节点能更灵活的区分流量并且灵活提供服务质量。 后期阶段IntServ能提供高质量精准的资源预留保证服务质量，但是灵活性和扩展性难以解决；DiffServ更加灵活但是没办法为流提供具体的带宽保证，不能给新流提供接入控制；IntServ和DiffServ各自有自己的优缺点，于是两种模型各有发展。也随着逐渐发展TE、自动QoS等技术也是逐渐出现。就像所有的产业的发展相同，最终QoS也将走向智能化。 等级模型尽力而为的服务只提供最基本的连接，对于数据分组是否到达目的地不关心，网络状态良好一般不会出现问题，但是一旦出现拥塞就会产生数据分组丢失。这是Internet提供的唯一一种服务，不会提供任何的服务和保证。 区分服务根据流量标记对其进行分类，并根据已经配置好的行为处理数据分组，为各类分组提供不同的服务保证。 保证服务为相关类型的流进行端到端的资源预留，以满足该流的通信需求。例如：视频、语音这类应用需要这种服务。 QoS工具分类和标记工具标记方法：CAR、PBR、QPPB、MQC标记位：IPP(IP优先级)、DSCP、COS、MPLS试验位 分类方法：MQC方式、NBAR(基于网络的应用识别)分类参数： L1层参数：物理接口、自己扣、永久虚电路或端口 L2层参数：MAC地址、802.1Q/p、Cos、vlan、MPLS EXP、ATM信源丢弃优先级（CLP）和帧中继可丢弃指示符（DE）位 L3层参数：IP优先级、DSCP和源目IP地址 L4层参数：TCP或UDP端口 L7层参数：应用程序签名或有效负载中的统一资源定位符 管制和整形工具管制工具：CAR（承诺速率接入） MQC（基于类别的管制器） 整形工具GTS（通用流量整形） DTS（分布式流量整形） 拥塞避免工具（其实就是排队机制）基于流的WFQ 基于类的CBWFQ 优先级队列 定制队列 LLQ 拥塞管理工具数据包丢失机制，避免出现TCP全局同步WRED（加权随机先期检测） 各个工具之间协同关系]]></content>
      <categories>
        <category>network</category>
        <category>QoS</category>
      </categories>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[QoS第二讲（标记字段IPP和ToS）]]></title>
    <url>%2F2018%2F06%2F10%2FQoS%E7%AC%AC%E4%BA%8C%E8%AE%B2%EF%BC%88%E6%A0%87%E8%AE%B0%E5%AD%97%E6%AE%B5IPP%E5%92%8CToS)%2F</url>
    <content type="text"><![CDATA[这两天一直准备写IPP和ToS,但是感觉自己还是不太理解这两个字段规划的来源，于是找到相关的IPP和ToS的RFC文档（791和1349）读了一下。原于自己英文水平有限只是大概了解其中的局部内容，现在在这里简单说一下。如果有机会看完1349后会再对ToS单独来一篇。 下文中Tos位定义以RFC1349为准。 在RFC791中首次对服务质量字段进行了定义，将8位的服务质量字段分为了三部分，IP优先级（3位）、Tos功能位（3位）、预留位（2位），详见下图。 IP优先级字段（IPP）：标记数据包的重要程度 位 含义 用途 7-5位 111 网络控制 网络中控制报文 7-5位 110 互联网络控制 网络中控制报文 7-5位 101 关键 语音流量 7-5位 100 急速 交互式视频流量 7-5位 011 闪速 语音信令流量 7-5位 010 快速 数据业务 7-5位 001 优先 非重要流量 7-5位 000 普通 默认缺省 ToS功能位：网络传输中对低延迟、高吞吐、高可靠的衡量 位 含义 用途 Bit3： 置1代表低延迟 置0代表正常延迟 Bit4： 置1代表高吞吐 置0代表正常吞吐 Bit5： 置1代表高可靠 置0代表正常可靠 在791中写道在网络传输中一种性能开启总没有两种性能开启展现出的性能更好，所以往往这三位中的多位都会被开启（置1）。 保留字段：对未来发展提供可能性 在RFC1349中IPP没有对其进行重新定义，但是对Tos功能位进行了重新定义。详解下图：Tos 功能位：增加了1位，用于最小代价位 | 含义 | 用途—|— | — Bit3： | 置1代表低延迟 | 置0代表正常延迟 Bit4： | 置1代表高吞吐 | 置0代表正常吞吐 Bit5： | 置1代表高可靠 | 置0代表正常可靠 Bit6： | 置1代表最小代价 | 置0代表正常代价 其实在RFC1349中不仅仅是这一位的变化，它最彻底的变化在于不再允许多个功能位同时置位，这4位之间不再和以前的3位哪像以逻辑与的方式出现，而是以整数形式出现，并且明确定义了5种功能。 1000 -------- 最小延迟 0100 -------- 最大吞吐 0010 -------- 最大可靠 0001 -------- 最小代价 文中又指出如果其他整数值出现是完全被允许的（只是工程组没有对其进行定义，留在未来作为预留），但是在网络传输过程中只有被定义的这5个整数值被默认使用。同时改字段不会在发生改变因为4位有16中功能类型，已经完全足够满足未来的使用。 最重要的一点，RFC1349中ToS为对RFC791中的ToS位是兼容的（因为几乎所有的网络协议是不会同时设置多个功能位，虽然RFC791中支持） MBZ位：也就是保留位 ToS功能位虽然我们在实际的QoS设置中基本不会使用但是它在ICMP和OSPF、ISIS报文中有非常重要的应用。（以后详说or自行查看RFC1349） 其实我们最用该了解的是IPP，它在QoS中起到了重要的最用，用于对流量标记、分类从而对转发行为进行控制，但是几个RFC文档中都是对其寥寥数据（总要在于用途，没有太多描述也在于它的作用性明确）。下讲将会介绍DSCP位。]]></content>
      <categories>
        <category>network</category>
        <category>QoS</category>
      </categories>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Cisco路由交换-NAT详解二]]></title>
    <url>%2F2018%2F06%2F10%2FCisco%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2-NAT%E8%AF%A6%E8%A7%A3%E4%BA%8C%2F</url>
    <content type="text"><![CDATA[概述上篇最后说了在cisco IOS配置NAT的时候我们会发现inside、outside、source、destination这样的参数，我们常用的就是inside和source参数，今天就让我们来看一下之其中的玄奥之处。在此之前我们需要先了解一些基本的概念 基本概念内部本地地址内部局域网中的IP地址，常见的A、B、C类中的私网地址，转换前的源地址 内部全局地址NAT设备外部地址，转化后的源地址 外部本地地址常规配置方式下此地址为访问的公网地址。反向思考此地址和内部本地地址相同 外部全局地址常规配置方式下此地址和外部本地地址相同。反向思考此地址和内部全局地址类似 主线概述123456#cisco IOS中NAT配置命令主要有以下3种ip nat inside sourceip nat inside destinationip nat outside source 我们在这里首先用最简单直接的方式理解outside、inside带来的影响，inside用来对内部本地地址、内部全局地址进行转换;outside用来对外部本地地址、外部全局地址进行转换。source和destination配合inside、outside代表NAT发起顺序 作用 ip nat inside source #动静态NAT或PAT配置 ip nat inside destination #负载均衡 ip nat outside source #配合其他类型进行双向地址伪装 配置详解拓扑图 基础配置123456789101112131415161718192021222324252627282930313233343536373839404142434445Client-1:Client-1(config)#inter f0/0Client-1(config-if)#ip add 192.168.2.2 255.255.255.0Client-1(config-if)#no shutClient-1(config)#ip route 0.0.0.0 0.0.0.0 192.168.2.1Client-1(config)#username test privilege 15 password testClient-1(config)#line vty 0 15Client-1(config-line)#login localClient-2:Client-2(config)#inter f0/0Client-2(config-if)#ip add 192.168.2.3 255.255.255.0Client-2(config-if)#no shutClient-2(config)#ip route 0.0.0.0 0.0.0.0 192.168.2.1Client-2(config)#username test privilege 15 password testClient-2(config)#line vty 0 15Client-2(config-line)#login localGW-WAN:GW-WAN(config)#inter f0/0GW-WAN(config-if)#ip add 192.168.2.1 255.255.255.0GW-WAN(config-if)#ip nat insideGW-WAN(config-if)#no shutGW-WAN(config-if)#inter f0/1GW-WAN(config-if)#ip add 200.1.1.2 255.255.255.0GW-WAN(config-if)#ip nat outsideGW-WAN(config-if)#no shutGW-WAN(config)#ip route 0.0.0.0 0.0.0.0 200.1.1.1Internet:Internet(config)#inter f0/0Internet(config-if)#ip add 200.1.1.1 255.255.255.0Internet(config-if)#no shutInternet(config-if)#inter f0/1Internet(config-if)#ip add 100.1.1.1 255.255.255.0Internet(config-if)#no shutServer:Server(config)#inter f0/0Server(config-if)#ip add 100.1.1.100 255.255.255.0Server(config-if)#no shutServer(config)#ip route 0.0.0.0 0.0.0.0 100.1.1.1Server(config)#username test priv 15 password testServer(config)#line vty 0 15Server(config-line)#login local ip nat inside source此为最常见的配置方式这里不再赘述 ip nat inside destion（可用于负载均衡TCP）12345678910111213141516171819202122232425262728293031323334配置GW-WAN(config)# ip access-list extended outside-ipGW-WAN(config-ext-nacl)# permit ip any host 200.1.1.6GW-WAN(config-ext-nacl)#exitGW-WAN(config)#ip nat pool inside-ip 192.168.2.2 192.168.2.3 netmask 255.255.255.0 type rotary #rotary配置后地址池内地址为轮询转态，用于负载轮询GW-WAN(config)#ip nat inside destination list outside-ip pool inside-ip测试#当从Server第一次telnet 200.1.1.6这个地址时我们进入的是Client-1设备，当我们退出后再进入后就是Client-2设备了#所以以一种简单的方式实现了简单的负载均衡Server#telnet 200.1.1.6Trying 200.1.1.6 ... OpenUser Access VerificationUsername: testPassword: Client-1# Client-1#exit[Connection to 200.1.1.6 closed by foreign host]Server#telnet 200.1.1.6Trying 200.1.1.6 ... OpenUser Access VerificationUsername: testPassword: Client-2#Client-2#exit[Connection to 200.1.1.6 closed by foreign host]#在NAT设备上我们可以清晰看到设备产生了两条映射关系，一条200.1.1.6指向2.2，另外一个指向2.3GW-WAN(config)#do show ip nat trPro Inside global Inside local Outside local Outside globaltcp 200.1.1.6:23 192.168.2.2:23 100.1.1.100:34623 100.1.1.100:34623tcp 200.1.1.6:23 192.168.2.3:23 100.1.1.100:60762 100.1.1.100:60762 ip nat outside source（可用于地址伪装）12345678910111213141516171819202122232425262728293031配置GW-WAN(config)#ip access-list extended ClientGW-WAN(config-ext-nacl)# permit ip any anyGW-WAN(config)#$de source list Client interface FastEthernet0/1 overload #该命令第一个地址为外部全局地址，第二个为外部本地地址,200.1.1.3为外部Server对内部用户的伪装地址GW-WAN(config)#ip nat outside source static 100.1.1.100 200.1.1.3 测试#首先，在Client-1 debug icmp报文，ping 200.1.1.3，然后我们会收到来自200.1.1.3的回应报文#然后，在Server debug icmp报文，发现收到了200.1.1.2的ping报文#最后，在GW-WAN上我们可以清晰的看到Client-1的192.168.2.2 转成了200.1.1.2，Server的100.1.1.100转成了200.1.1.3，基于此实现了双向地址隐藏Client-1Client-1#debug ip icmp Client-1#ping 200.1.1.3 repeat 1Type escape sequence to abort.Sending 1, 100-byte ICMP Echos to 200.1.1.3, timeout is 2 seconds:!Success rate is 100 percent (1/1), round-trip min/avg/max = 168/168/168 msClient-1#*Mar 1 02:55:12.455: ICMP: echo reply rcvd, src 200.1.1.3, dst 192.168.2.2ServerServer#debug ip icmp Server#*Mar 1 02:56:18.947: ICMP: echo reply sent, src 100.1.1.100, dst 200.1.1.2GW-WANGW-WAN(config)#do show ip nat trPro Inside global Inside local Outside local Outside global--- --- --- 200.1.1.3 100.1.1.100icmp 200.1.1.2:5 192.168.2.2:5 200.1.1.3:5 100.1.1.100:5 其实还有很多不同的组合，静态、动态、NAT、PAT的结合，不过理解了转换思路，剩下的只是机械工作。下一篇文章将会介绍（ip nat enable）没有inside、outside的NAT配置]]></content>
      <categories>
        <category>network</category>
        <category>nat</category>
      </categories>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Cisco路由交换--NAT详解一]]></title>
    <url>%2F2018%2F06%2F10%2FCisco%E8%B7%AF%E7%94%B1%E4%BA%A4%E6%8D%A2-NAT%E8%AF%A6%E8%A7%A3%E4%B8%80%2F</url>
    <content type="text"><![CDATA[NAT出现背景话不多说大家应该很清楚NAT出现是因为IPv4在设计之初没有考虑到网络发展的如此迅猛以至于32位的地址容量迅速面临枯竭，为了寻求解决方案。一方面IPv6技术问世，另外一方面NAT技术出现。但是NAT的出现使得IPv4地址面临枯竭的状态得到了非常有效的缓解，让IPv4依然是当今网络环境的主流技术。而IPv6至今也因为易用性和IPv4地址枯竭问题的遏制等等很多原因导致没有好的实施。（IPv6依然是未来） NAT类型静态NAT静态NAT就是把本地局域网IP地址和外部公网IP地址一对一的映射，该映射关系不存在时效性，不能动态变更 动态NAT动态NAT就是把本地局域网IP地址和外部公网地址池中的某个地址进行一对一的映射，与静态NAT最大的不同点在于，该映射关系存在时效性，会随着应用和时间不断更改映射关系 静态PAT静态PAT与静态NAT非常相似，也是一对一映射关系，映射关系不存在时效性，但是最大的不同在于端口参数的介于，只是把本地局域网IP和端口与公网IP地址和端口进行了一对一的映射，这样一个公网地址可以映射出65535+65535（TCP+UDP）个局域网设备 动态PAT动态PAT和动态NAT与静态PAT和静态NAT的关系类似，在动态PAT中局域网IP与端口会和公网地址与端口产生一对一的映射关系，但是映射关系存在时效性，IP和端口的接口也让多个局域网地址可以共同使用一个公网地址进行常规网络活动 IOS中NAT的配置实验拓扑 基础配置：123456789101112131415161718192021222324252627282930313233343536373839404142434445Client-1:Client-1(config)#inter f0/0Client-1(config-if)#ip add 192.168.2.2 255.255.255.0Client-1(config-if)#no shutClient-1(config)#ip route 0.0.0.0 0.0.0.0 192.168.2.1Client-1(config)#username test privilege 15 password testClient-1(config)#line vty 0 15Client-1(config-line)#login localClient-2:Client-2(config)#inter f0/0Client-2(config-if)#ip add 192.168.2.3 255.255.255.0Client-2(config-if)#no shutClient-2(config)#ip route 0.0.0.0 0.0.0.0 192.168.2.1Client-2(config)#username test privilege 15 password testClient-2(config)#line vty 0 15Client-2(config-line)#login localGW-WAN:GW-WAN(config)#inter f0/0GW-WAN(config-if)#ip add 192.168.2.1 255.255.255.0GW-WAN(config-if)#ip nat insideGW-WAN(config-if)#no shutGW-WAN(config-if)#inter f0/1GW-WAN(config-if)#ip add 200.1.1.2 255.255.255.0GW-WAN(config-if)#ip nat outsideGW-WAN(config-if)#no shutGW-WAN(config)#ip route 0.0.0.0 0.0.0.0 200.1.1.1Internet:Internet(config)#inter f0/0Internet(config-if)#ip add 200.1.1.1 255.255.255.0Internet(config-if)#no shutInternet(config-if)#inter f0/1Internet(config-if)#ip add 100.1.1.1 255.255.255.0Internet(config-if)#no shutServer:Server(config)#inter f0/0Server(config-if)#ip add 100.1.1.100 255.255.255.0Server(config-if)#no shutServer(config)#ip route 0.0.0.0 0.0.0.0 100.1.1.1Server(config)#username test priv 15 password testServer(config)#line vty 0 15Server(config-line)#login local 静态NAT12345678910111213141516171819202122232425262728#配置GW-WAN(config)#ip nat inside source static 192.168.2.2 200.1.1.3 GW-WAN(config)#ip nat inside source static 192.168.2.3 200.1.1.4 #测试Server:Server#telnet 200.1.1.3Trying 200.1.1.3 ... OpenUser Access VerificationUsername: testPassword: Client-1#exit[Connection to 200.1.1.3 closed by foreign host]Server#telnet 200.1.1.4Trying 200.1.1.4 ... OpenUser Access VerificationUsername: testPassword: Client-2#exit[Connection to 200.1.1.4 closed by foreign host] 动态NAT123456789101112131415161718192021222324#配置GW-WAN(config)#ip access-list extended clientGW-WAN(config-ext-nacl)#permit ip host 192.168.2.2 anyGW-WAN(config-ext-nacl)#permit ip host 192.168.2.3 anyGW-WAN(config)#ip nat pool Nat 200.1.1.5 200.1.1.6 netmask 255.255.255.252GW-WAN(config)#ip nat inside source list client pool Nat #测试Client-1:Client-1#ping 100.1.1.100 repeat 100Client-2:Client-2#ping 100.1.1.100 repeat 100GW-WAN:GW-WAN#show ip nat translations Pro Inside global Inside local Outside local Outside global--- 200.1.1.5 192.168.2.2 --- ------ 200.1.1.6 192.168.2.3 --- ---Server:Server#debug ip icmp*Mar 1 00:58:37.799: ICMP: echo reply sent, src 100.1.1.100, dst 200.1.1.5*Mar 1 00:58:37.799: ICMP: echo reply sent, src 100.1.1.100, dst 200.1.1.6 静态PAT123456789101112131415161718192021222324252627282930#配置GW-WAN(config)#ip nat inside source static tcp 192.168.2.2 23 200.1.1.3 1025GW-WAN(config)#ip nat inside source static tcp 192.168.2.3 23 200.1.1.3 1026GW-WAN(config)#inter f0/0GW-WAN(config-if)#ip nat inside GW-WAN(config-if)#inter f0/1GW-WAN(config-if)#ip nat outside#测试Server:Server#telnet 200.1.1.3 1025Trying 200.1.1.3, 1025 ... OpenUser Access VerificationUsername: testPassword: Client-1#exit[Connection to 200.1.1.3 closed by foreign host]Server#telnet 200.1.1.3 1026Trying 200.1.1.3, 1026 ... OpenUser Access VerificationUsername: testPassword: Client-2#exit 动态PAT1234567891011121314151617181920212223配置：GW-WAN(config)#ip access-list extended clientGW-WAN(config-ext-nacl)#permit ip host 192.168.2.2 anyGW-WAN(config-ext-nacl)#permit ip host 192.168.2.3 anyGW-WAN(config)#ip nat inside source list client interface f0/1 overload #测试Client-1:Client-1#ping 100.1.1.100 repeat 100Client-2:Client-2#ping 100.1.1.100 repeat 100GW-WAN:GW-WAN# show ip nat translations Pro Inside global Inside local Outside local Outside globalicmp 200.1.1.2:2 192.168.2.2:2 100.1.1.100:2 100.1.1.100:2icmp 200.1.1.2:0 192.168.2.3:2 100.1.1.100:2 100.1.1.100:0Server:Server#debug ip icmp*Mar 1 00:56:48.427: ICMP: echo reply sent, src 100.1.1.100, dst 200.1.1.2*Mar 1 00:56:48.471: ICMP: echo reply sent, src 100.1.1.100, dst 200.1.1.2 相信大家都注意到了在配置NAT的时候命令会有inside、outside、destination、source、enable参数，下篇将会详细介绍这些参数的含义]]></content>
      <categories>
        <category>network</category>
        <category>nat</category>
      </categories>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
</search>
